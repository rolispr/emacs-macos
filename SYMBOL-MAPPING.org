#+TITLE: Complete Symbol Mapping for Voice Module

* Emacs-exposed Functions (Must Match Swift Module)

** TTS Functions
| Swift Symbol                 | Zig Symbol                    | Status  | Description                                       |
|------------------------------+-------------------------------+---------+---------------------------------------------------|
| macmod/speak                 | macmod/speak                  | Pending | Basic text-to-speech                             |
| macmod/speak-with-voice      | macmod/speak-with-voice       | Pending | TTS with specific voice                          |
| macmod/speak-advanced        | macmod/speak-advanced         | Pending | TTS with voice, rate, pitch                      |
| macmod/stop-speech           | macmod/stop-speech            | Pending | Stop current speech                              |
| macmod/pause-speech          | macmod/pause-speech           | Pending | Pause current speech                             |
| macmod/continue-speech       | macmod/continue-speech        | Pending | Resume paused speech                             |
| macmod/list-voices           | macmod/list-voices            | Pending | Return available system voices                   |
| macmod/get-suggested-voices  | macmod/get-suggested-voices   | Pending | Return suggested voice dictionary                |
| macmod/speak-openai          | macmod/speak-openai           | Pending | OpenAI TTS integration                           |
| macmod/stop-openai           | macmod/stop-openai            | Pending | Stop OpenAI speech                               |

** STT Functions
| Swift Symbol                      | Zig Symbol                         | Status  | Description                        |
|-----------------------------------+------------------------------------+---------+------------------------------------|
| macmod/request-speech-permission  | macmod/request-speech-permission   | Pending | Request OS permission              |
| macmod/check-speech-permission    | macmod/check-speech-permission     | Pending | Check permission status            |
| macmod/start-recording            | macmod/start-recording             | Pending | Start local recording              |
| macmod/stop-recording             | macmod/stop-recording              | Pending | Stop and return transcription      |
| macmod/get-recognition-status     | macmod/get-recognition-status      | Pending | Get current recognition status     |
| macmod/is-speech-available        | macmod/is-speech-available         | Pending | Check if recognition available     |
| macmod/get-current-transcription  | macmod/get-current-transcription   | Pending | Get partial transcription          |
| macmod/whisper-start              | macmod/whisper-start               | Pending | Start Whisper recording            |
| macmod/whisper-transcribe         | macmod/whisper-transcribe          | Pending | Stop and transcribe via Whisper    |

* Internal Module Structure

** File Organization
#+begin_src
zig-src/
├── main.zig                 # Module entry point and registration
├── emacs_api.zig           # Emacs API bindings and helpers
├── tts/
│   ├── tts.zig            # TTS interface
│   ├── macos_tts.zig      # AVSpeechSynthesizer wrapper
│   ├── linux_tts.zig      # Linux TTS implementation
│   └── openai_tts.zig     # OpenAI TTS client
├── stt/
│   ├── stt.zig            # STT interface
│   ├── macos_stt.zig      # SFSpeechRecognizer wrapper
│   ├── whisper.zig        # Whisper.cpp bindings
│   └── audio_recorder.zig # Audio recording abstraction
└── platform/
    ├── platform.zig       # Platform detection
    ├── macos.zig         # macOS-specific code
    └── linux.zig         # Linux-specific code
#+end_src

** Core Components

*** TTS System
- AVSpeechSynthesizer wrapper for macOS
- Voice management (list, selection)
- Rate/pitch/volume control
- Pause/resume/stop control
- OpenAI API integration

*** STT System
- SFSpeechRecognizer for macOS live transcription
- Whisper.cpp for cross-platform transcription
- Audio recording pipeline
- Permission management
- Continuous recognition mode

*** Audio Pipeline
- CoreAudio integration (macOS)
- PulseAudio integration (Linux)
- Ring buffer for audio data
- Format conversion (16kHz mono for Whisper)

* Data Types

** Voice Info
#+begin_src zig
const VoiceInfo = struct {
    identifier: []const u8,
    name: []const u8,
    language: []const u8,
    quality: enum { Default, Enhanced, Premium },
};
#+end_src

** Recognition State
#+begin_src zig
const RecognitionState = enum {
    idle,
    recording,
    processing,
    error,
};
#+end_src

** Audio Buffer
#+begin_src zig
const AudioBuffer = struct {
    data: []f32,
    sample_rate: u32,
    channels: u8,
};
#+end_src

* Platform APIs Used

** macOS
- AVFoundation (AVSpeechSynthesizer, AVSpeechUtterance)
- Speech (SFSpeechRecognizer, SFSpeechAudioBufferRecognitionRequest)
- CoreAudio (AudioQueue, AudioBuffer)

** Linux
- PulseAudio (recording)
- espeak-ng or piper (TTS)

** Cross-platform
- whisper.cpp (speech recognition)
- OpenAI API (TTS/STT)