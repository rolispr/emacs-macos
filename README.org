#+TITLE: Vox - A module for emacs for tts/stt
#+AUTHOR: Bret Horne

Native voice module providing speech synthesis and recognition for Emacs.

* Features
- Real-time voice commands - speak Emacs commands naturally
- Dictation mode with auto-punctuation and capitalization
- System voice integration (multiple voices)
- Multiple backend support (swift and very experimental Zig+Whisper.cpp)
- Cross-platform architecture (macOS now, Linux planned)

* Build

** For Swift backend
#+begin_src sh
swift build
#+end_src

* Setup

** Unified System
Vox provides a complete voice control system with backend abstraction:

#+begin_src emacs-lisp
(use-package vox
  :load-path "~/git/elisp/macos-module"
  :bind
  (("C-c v v" . vox-toggle)
   ("C-c v s" . vox-say)
   ("C-c v a" . vox-speak-advanced)
   ("C-c v l" . vox-list-voices)
   ("C-c v p" . vox-pause)
   ("C-c v c" . vox-continue)
   ("C-c v x" . vox-stop-speech)
   ("C-c v b" . vox-build-and-load))
  :custom
  (vox-backend 'swift)
  (vox-default-voice "com.apple.voice.compact.en-US.Samantha")
  (vox-default-rate 0.6)
  (vox-default-pitch 1.0)
  (vox-silence-timeout 8.0)
  (vox-show-partial-transcription t)
  (vox-transcription-prefix "[ðŸŽ¤] "))

;; If module not built: C-c v b (vox-build-and-load)
#+end_src


** Grant Permissions
1. Run `M-x vox-request-permission`
2. Allow microphone access in the system dialog
3. May need to restart Emacs after granting permission

* Usage

** Voice Commands
Start voice recognition with `C-c v v` (vox-toggle).

*** Command Mode (default)
Speak naturally to execute commands:
- "save" â†’ executes `save-buffer`
- "other window" â†’ executes `other-window`
- "split window" â†’ executes `split-window-right`
- "find file" â†’ executes `find-file`
- "kill buffer" â†’ executes `kill-buffer`
- "switch buffer" â†’ executes `switch-to-buffer`
- "delete window" â†’ executes `delete-window`

*** Mode Switching
- Say "insert" â†’ switch to dictation mode (text input)
- Say "command mode" â†’ switch back to command mode
- Say "done", "stop", "finish", or "end" â†’ stop voice recognition

*** Text-to-Speech
- `vox-say` (C-c v s) - Speak text with default settings
- `vox-speak-advanced` (C-c v a) - Speak with voice/rate/pitch control
- `vox-list-voices` (C-c v l) - Show available voices
- `vox-pause` (C-c v p) - Pause speech
- `vox-continue` (C-c v c) - Continue paused speech
- `vox-stop-speech` (C-c v x) - Stop speech synthesis

* Configuration


** Voice Settings
#+begin_src emacs-lisp
;; Backend selection
(setq vox-backend 'swift)  ; or 'zig

;; Voice recognition settings
(setq vox-silence-timeout 10.0           ; Auto-stop after silence
      vox-process-delay 1.5              ; Delay before processing phrases
      vox-polling-interval 0.1           ; Recognition polling rate
      vox-show-partial-transcription t   ; Show live transcription
      vox-transcription-prefix "[ðŸŽ¤] ")  ; Echo area prefix

;; TTS settings
(setq vox-default-voice "com.apple.voice.compact.en-US.Samantha"
      vox-default-rate 0.6               ; Speaking rate (0.0-1.0)
      vox-default-pitch 1.0)             ; Pitch multiplier

;; Stop words (any of these will stop recognition)
(setq vox-auto-stop-words '("done" "stop" "finish" "end"))
#+end_src

** Custom Commands
#+begin_src emacs-lisp
;; Add to vox-cmd-commands in vox-cmd.el
(setq vox-cmd-commands
      (append vox-cmd-commands
              '(("magit status" . magit-status)
                ("dired" . dired)
                ("eshell" . eshell))))
#+end_src


** Commands not recognized
- Check microphone permissions
- Try `M-x vox-list-commands` to see available commands
- Speak clearly and pause between words
- Check `*Messages*` buffer for recognition feedback

** Backend specific issues
- Swift: Requires macOS 10.15+, check Swift backend is loaded
- Zig: Requires whisper model file, check path in stt.zig
